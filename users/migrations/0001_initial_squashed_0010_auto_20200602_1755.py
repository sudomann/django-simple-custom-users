# Generated by Django 3.0.6 on 2020-06-02 17:56

import django.contrib.postgres.fields.citext
import django.contrib.postgres.operations
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('users', '0001_initial'), ('users', '0002_auto_20190609_1721'), ('users', '0003_auto_20200130_1421'), ('users', '0004_auto_20200329_1456'), ('users', '0005_remove_customuser_full_name'), ('users', '0006_privacypolicy_securitypolicy_termsofservice'), ('users', '0007_auto_20200420_0625'), ('users', '0008_auto_20200420_0637'), ('users', '0009_customuser_full_name'), ('users', '0010_auto_20200602_1755')]

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        django.contrib.postgres.operations.CITextExtension(
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('document_identifier', models.CharField(blank=True, max_length=64)),
                ('note', models.CharField(blank=True, max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('document_identifier', models.CharField(blank=True, max_length=64)),
                ('note', models.CharField(blank=True, max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermsOfService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('document_identifier', models.CharField(blank=True, max_length=64)),
                ('note', models.CharField(blank=True, max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', django.contrib.postgres.fields.citext.CIEmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('privacy_policy_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.PrivacyPolicy')),
                ('security_policy_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.SecurityPolicy')),
                ('terms_of_service_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.TermsOfService')),
                ('full_name', models.CharField(default='No Name Provided', max_length=150)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
